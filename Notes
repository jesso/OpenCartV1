Automation Framework
-------------------

We organize automation project files/folders in structured manner.
https://tutorialsninja.com/demo/index.php?route=common/home

1. Account Registration
	1. create first page object class 
		1.1 AccountRegistrationPage
		1.2 HomePage
		1.3 basePage (for constructor its not a page object class)
	
	2. Create AccountRegistrationTest under TestCases


2. Adding to logs to test case (Log4j)

Logging - - recording all the events is the form of text.
Adv:
In real time user is doing any wrongful activity all the event will recorded.

Log Levels -- All < Trace < Debug < Info < Warn < error < Fatal <  Off

Appenders -  where to generate logs (console (only runtime)/File)
Loggers -  what type of logs generate (All < Trace < Debug < Info < Warn < error < Fatal <  Off)

3. Run Test on Desired Browsers/Cross Browser/Parallel

4. Read common values from config.properties file.

5. Login Test Case

6. Data Driven Login Test

7. Grouping Tests

8. Add External Report

9. Run Failed Tests

10. Run Tests on Selenium Grid
	used for running test in remote servers, miltiple browsers, systems, etc.

	2 Components 
	1. Hub -> setup in client system ( main system)
	2. Node -> remote machine
	
	Attache nodes with the hub and then hub controls all the nodes. 
	Running all the test case from the hub. Hub selects running specification and executes the tests.
	
	Imp requirement : all the hub and nodes should be connected to same network.
	
	To solve he VM issues Docker came into existence.
	
	ONe single system and a hub, IS called stand alone system
	Single hub and multiple hub is called distributed system.
	
11. Docker

	Virtualization -> setup virtual machine . it shares our hardware.
	Containerazation -> no need to setup vm we will containers instead of virtual machines . It will not share hardware has its own memory and hardware.
		Docker -> Contanerazation -> dockerhub (repository): contains multiple images (push / pull for use) ->
		 -> image -> container
				(using image we can create container. And this container acts as operating system and we can run test cases.)
				
 	Basic Commands
 	-------------
 	docker version
 	docker -v
 	docker info
 	docker info
 	docker --help
 	docker login
 	
 	images commands: * downloding and removing images form docker hub*
 	---------------
 	docker images
 	docker pull ubuntu
 	docker rmi <image id> // to remove image from the docker
 	
 	container command :
 	-----------------
	docker ps  							// list of containers currently running
	docker run image name (ubuntu)> 	// create a container
	docker start <container id/name> 			//start the container
	docker start <imaga name> 			//stop the container
	docker rm <container id/name> 		//remove the container
	docker run -it <conainter name/id> 	// interact with the container
	
	System commands:
	---------------
	docker stats 						//information of the container 
	docker system df 					//disk related info
	docker system prune -f 				// forcefully remove all the containers that are stopped.
	

 3 images
 ----------
 1. hub
 2. linux-firefox //nodes
 3. linux-chrome //nodes
 
* docker-compose.yaml
	command : docker-compose up
	
Execution

dependencies -> download required depenecy jar for project
plugins -> to compile and trun the project


	1. Maven compiler plugin
	2. Maven surefire plugin
	
Maintaiance 
------------

GIT is s/w act as a local repository. Created using Git Software. will commit the code
GitHub : Remote Repository/ Centreal Repository/ Common Repository. Accessed using URL. sharing to files from GIT to GITHUB is called PUSH
DevOps :
 1. Build Creation :using Maven build tool(maven is a build tool.) -> Compile code, run code, test code, package, Install
 2. Run Automation : Talking all the codes from GitHb repository Devops will perform build creation. To doo all the the activities they do automation.
 This is called Process Automation.
 3. Build Certification : Once all the automation executed it is certified. 
 
 Pre-requisits
 -----------
 1. Git Instalation
 2. Creeate an acount with GitHub
 
 WorkFlow Git & GitHub
 ----------------------
 Working Directory--Add Command --> Staging Area(Index Area)---Commit Command --> Git Repository--Push Command-------> Git Hub
 ---------------------------------------For Recovery----------------------------------------------------------------------
 Untracked Files-------------------------> Tracked Files--------------------------> Committed Files----------------> Remote File
 
 Steps:
 
 1. Create local repository
 		get init (one time job)
 		
 2. Provide user info to git repository.(one time job)
 		git config --global user.name "your name"
 		git confif --global user.email "your email"
 		
 3. To check untracked files
 		git status
 
 4. 
 
 
 
 
 
 